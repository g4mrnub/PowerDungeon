<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_stand_down</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x_pos = x;
y_pos = y;
moving = false;
standing = true;
stand_dir = sprite_index;
char_state = "idle";
spr_attack = spr_player_attack_down;
attack_anim = 0;

image_speed = 0;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (attack_anim &gt; 0){
    attack_anim -= 1;
    }
    
if (x_pos &gt; x)///right
    {
        x += 4;
        stand_dir = spr_stand_right;
        spr_attack = spr_player_attack_right;
    } 
if (x_pos &lt; x)///left
    {
        x -= 4;
        stand_dir = spr_stand_left;
        spr_attack = spr_player_attack_left;
    } 
if (y_pos &lt; y)///up
    {
        y -= 4;
        stand_dir = spr_stand_up;
        spr_attack = spr_player_attack_up;
    } 
if (y_pos &gt; y)///down
    {
        y += 4;
        stand_dir = spr_stand_down;
        spr_attack = spr_player_attack_down;
    } 

if(x_pos == x &amp;&amp; y_pos == y &amp;&amp; attack_anim == 0){
    moving = false;
    image_speed = 0;
    if keyboard_check(vk_nokey) || attack_anim ==0{
        sprite_index = stand_dir;
    }
}
 

    


if !moving{
    switch(keyboard_key)
        {
        case vk_right:
            stand_dir = spr_stand_right;
            spr_attack = spr_player_attack_right;
            sprite_index = stand_dir;
            moving = true;
        break;
    
        case vk_left:
            stand_dir = spr_stand_left;
            spr_attack = spr_player_attack_left;
            sprite_index = stand_dir;
            moving = true;
        break;
    
        case vk_up:
            stand_dir = spr_stand_up;
            spr_attack = spr_player_attack_up;
            sprite_index = stand_dir;
            moving = true;
        break;
    
        case vk_down:
            stand_dir = spr_stand_down;
            spr_attack = spr_player_attack_down;
            sprite_index = stand_dir;
            moving = true;
        break;

        case ord("D"):
            x_to = x + 32;
            if place_empty(x_to,y){
                x_pos += 32;
                moving = true;
                image_speed = 0.3;
                sprite_index = spr_player_right;
            }
            else{
                x_to = x;
            }       
        break;
    
        case ord("A"):
            x_to = x - 32;
            if place_empty(x_to,y){
                x_pos -= 32;
                moving = true;
                image_speed = 0.3;
                sprite_index = spr_player_left;
            }
            else{
                x_to = x;
            }
        break;
    
        case ord("W"):
            y_to = y - 32;
            if place_empty(x,y_to){
                y_pos -= 32;
                moving = true;
                image_speed = 0.3;
                sprite_index = spr_player_up;
            }
            else{
                y_to = y;
            }
        break;
    
        case ord("S"):
            y_to = y + 32;
            if place_empty(x,y_to){
                y_pos += 32;
                moving = true;
                image_speed = 0.3;
                sprite_index = spr_player_down;
            }
            else{
                y_to = y;
            }
        break;
        }  
     
}

if (keyboard_check_pressed(vk_space) &amp;&amp; !moving){
    moving = true;
    attack_anim = 10;
    script_execute(attack,obj_pitchfork);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
